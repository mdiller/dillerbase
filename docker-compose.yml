version: '3'

services:
  postgrest-db:
    container_name: postgrest-db
    image: postgres:13-alpine
    ports:
      - "${DB_POSTGRES_PORT}:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - DB_ANON_ROLE=${DB_ANON_ROLE}
      - DB_SCHEMA=${DB_SCHEMA}
    volumes:
      # anything in initdb directory is created in the database
      # see "How to extend this image" section at https://hub.docker.com/r/_/postgres/
      - "./postgresql/initdb:/docker-entrypoint-initdb.d"
      - "./postgresql/data:/var/lib/postgresql/data"
    networks:
      - postgrest-backend
    restart: unless-stopped

  postgrest:
    container_name: postgrest
    image: postgrest/postgrest:latest
    ports:
      - "${DB_API_PORT}:3000"
    # https://postgrest.org/en/latest/configuration.html#environment-variables
    environment:
      - PGRST_DB_URI=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgrest-db:${DB_POSTGRES_PORT}/${POSTGRES_DB}
      - PGRST_DB_SCHEMA=${DB_SCHEMA}
      - PGRST_DB_ANON_ROLE=${DB_ANON_ROLE}
      - PGRST_OPENAPI_SERVER_PROXY_URI=http://localhost:${DB_API_PORT}
    networks:
      - postgrest-backend
    restart: unless-stopped
  
  dillerbase-api:
    container_name: dillerbase-api
    build: .
    ports:
      - ${SERVER_PORT}:${SERVER_PORT}
    restart: unless-stopped
  
networks:
  postgrest-backend:
    driver: bridge